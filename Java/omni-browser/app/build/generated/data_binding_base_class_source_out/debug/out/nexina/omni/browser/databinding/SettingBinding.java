// Generated by view binder compiler. Do not edit!
package nexina.omni.browser.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.LinearLayout;
import android.widget.Spinner;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import nexina.omni.browser.R;

public final class SettingBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final Button clearCache;

  @NonNull
  public final Button clearCookies;

  @NonNull
  public final LinearLayout linear10;

  @NonNull
  public final LinearLayout linear11;

  @NonNull
  public final LinearLayout linear14;

  @NonNull
  public final LinearLayout linear15;

  @NonNull
  public final LinearLayout linear2;

  @NonNull
  public final LinearLayout linear3;

  @NonNull
  public final LinearLayout linear4;

  @NonNull
  public final LinearLayout linear5;

  @NonNull
  public final LinearLayout linear6;

  @NonNull
  public final LinearLayout linear7;

  @NonNull
  public final LinearLayout linearBg;

  @NonNull
  public final LinearLayout linearContent;

  @NonNull
  public final Spinner spinner1;

  @NonNull
  public final TextView textview1;

  @NonNull
  public final TextView textview2;

  @NonNull
  public final TextView textview3;

  @NonNull
  public final TextView textview6;

  private SettingBinding(@NonNull LinearLayout rootView, @NonNull Button clearCache,
      @NonNull Button clearCookies, @NonNull LinearLayout linear10, @NonNull LinearLayout linear11,
      @NonNull LinearLayout linear14, @NonNull LinearLayout linear15, @NonNull LinearLayout linear2,
      @NonNull LinearLayout linear3, @NonNull LinearLayout linear4, @NonNull LinearLayout linear5,
      @NonNull LinearLayout linear6, @NonNull LinearLayout linear7, @NonNull LinearLayout linearBg,
      @NonNull LinearLayout linearContent, @NonNull Spinner spinner1, @NonNull TextView textview1,
      @NonNull TextView textview2, @NonNull TextView textview3, @NonNull TextView textview6) {
    this.rootView = rootView;
    this.clearCache = clearCache;
    this.clearCookies = clearCookies;
    this.linear10 = linear10;
    this.linear11 = linear11;
    this.linear14 = linear14;
    this.linear15 = linear15;
    this.linear2 = linear2;
    this.linear3 = linear3;
    this.linear4 = linear4;
    this.linear5 = linear5;
    this.linear6 = linear6;
    this.linear7 = linear7;
    this.linearBg = linearBg;
    this.linearContent = linearContent;
    this.spinner1 = spinner1;
    this.textview1 = textview1;
    this.textview2 = textview2;
    this.textview3 = textview3;
    this.textview6 = textview6;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static SettingBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static SettingBinding inflate(@NonNull LayoutInflater inflater, @Nullable ViewGroup parent,
      boolean attachToParent) {
    View root = inflater.inflate(R.layout.setting, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static SettingBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.clear_cache;
      Button clearCache = ViewBindings.findChildViewById(rootView, id);
      if (clearCache == null) {
        break missingId;
      }

      id = R.id.clear_cookies;
      Button clearCookies = ViewBindings.findChildViewById(rootView, id);
      if (clearCookies == null) {
        break missingId;
      }

      id = R.id.linear10;
      LinearLayout linear10 = ViewBindings.findChildViewById(rootView, id);
      if (linear10 == null) {
        break missingId;
      }

      id = R.id.linear11;
      LinearLayout linear11 = ViewBindings.findChildViewById(rootView, id);
      if (linear11 == null) {
        break missingId;
      }

      id = R.id.linear14;
      LinearLayout linear14 = ViewBindings.findChildViewById(rootView, id);
      if (linear14 == null) {
        break missingId;
      }

      id = R.id.linear15;
      LinearLayout linear15 = ViewBindings.findChildViewById(rootView, id);
      if (linear15 == null) {
        break missingId;
      }

      id = R.id.linear2;
      LinearLayout linear2 = ViewBindings.findChildViewById(rootView, id);
      if (linear2 == null) {
        break missingId;
      }

      id = R.id.linear3;
      LinearLayout linear3 = ViewBindings.findChildViewById(rootView, id);
      if (linear3 == null) {
        break missingId;
      }

      id = R.id.linear4;
      LinearLayout linear4 = ViewBindings.findChildViewById(rootView, id);
      if (linear4 == null) {
        break missingId;
      }

      id = R.id.linear5;
      LinearLayout linear5 = ViewBindings.findChildViewById(rootView, id);
      if (linear5 == null) {
        break missingId;
      }

      id = R.id.linear6;
      LinearLayout linear6 = ViewBindings.findChildViewById(rootView, id);
      if (linear6 == null) {
        break missingId;
      }

      id = R.id.linear7;
      LinearLayout linear7 = ViewBindings.findChildViewById(rootView, id);
      if (linear7 == null) {
        break missingId;
      }

      id = R.id.linear_bg;
      LinearLayout linearBg = ViewBindings.findChildViewById(rootView, id);
      if (linearBg == null) {
        break missingId;
      }

      id = R.id.linear_content;
      LinearLayout linearContent = ViewBindings.findChildViewById(rootView, id);
      if (linearContent == null) {
        break missingId;
      }

      id = R.id.spinner1;
      Spinner spinner1 = ViewBindings.findChildViewById(rootView, id);
      if (spinner1 == null) {
        break missingId;
      }

      id = R.id.textview1;
      TextView textview1 = ViewBindings.findChildViewById(rootView, id);
      if (textview1 == null) {
        break missingId;
      }

      id = R.id.textview2;
      TextView textview2 = ViewBindings.findChildViewById(rootView, id);
      if (textview2 == null) {
        break missingId;
      }

      id = R.id.textview3;
      TextView textview3 = ViewBindings.findChildViewById(rootView, id);
      if (textview3 == null) {
        break missingId;
      }

      id = R.id.textview6;
      TextView textview6 = ViewBindings.findChildViewById(rootView, id);
      if (textview6 == null) {
        break missingId;
      }

      return new SettingBinding((LinearLayout) rootView, clearCache, clearCookies, linear10,
          linear11, linear14, linear15, linear2, linear3, linear4, linear5, linear6, linear7,
          linearBg, linearContent, spinner1, textview1, textview2, textview3, textview6);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
