# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'form.ui'
#
# Created by: PyQt5 UI code generator 5.15.4
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt6 import QtCore, QtGui, QtWidgets
from PyQt6.QtWidgets import * 
from PyQt6.QtGui import * 
from PyQt6.QtCore import * 

from PIL.ImageQt import ImageQt
from PIL import Image, ImageEnhance

import os

class Ui_omniviewer(object):
    
    def exit(self):
        sys.exit()
    
    def zoom_slider(self):
        
        im = Image.open("ye.jpg").convert("RGB")
        qim = ImageQt(im)
        data = im.tobytes("raw","RGB")
        qim = QtGui.QImage(data, im.size[0], im.size[1], QtGui.QImage.Format.Format_RGB888)
        scalefactor = self.zoom.value();
        pix = QtGui.QPixmap.fromImage(qim).scaled(QGuiApplication.primaryScreen().geometry().width() - scalefactor, QGuiApplication.primaryScreen().geometry().height(),Qt.AspectRatioMode.KeepAspectRatio, Qt.TransformationMode.SmoothTransformation)
        self.image.setGeometry(QtCore.QRect(int(QGuiApplication.primaryScreen().geometry().width() / 2) - int(pix.width() / 2), int(QGuiApplication.primaryScreen().geometry().height() / 2) - int(pix.height() / 2), pix.width(), pix.height()))
        self.image.setPixmap(pix)
        
    def brightness_slider(self):
        im = Image.open("ye.jpg").convert("RGB")
        factor = self.brightness.value() / 100
        im = ImageEnhance.Brightness(im).enhance(factor)
        qim = ImageQt(im) 
        data = im.tobytes("raw","RGB")
        qim = QtGui.QImage(data, im.size[0], im.size[1], QtGui.QImage.Format.Format_RGB888)
        scalefactor = self.zoom.value();
        pix = QtGui.QPixmap.fromImage(qim).scaled(QGuiApplication.primaryScreen().geometry().width() - scalefactor, QGuiApplication.primaryScreen().geometry().height(),Qt.AspectRatioMode.KeepAspectRatio, Qt.TransformationMode.SmoothTransformation)
        self.image.setGeometry(QtCore.QRect(int(QGuiApplication.primaryScreen().geometry().width() / 2) - int(pix.width() / 2), int(QGuiApplication.primaryScreen().geometry().height() / 2) - int(pix.height() / 2), pix.width(), pix.height()))
        self.image.setPixmap(pix)
       
    
    
    def setupUi(self, omniviewer):

        files = [f for f in os.listdir('.') if os.path.isfile(f)]
        for f in files:
                if f.find("4356") :
                        print(f)



        omniviewer.setObjectName("omniviewer")
        omniviewer.setWindowModality(QtCore.Qt.WindowModality.ApplicationModal)
        omniviewer.resize(QGuiApplication.primaryScreen().geometry().width(), QGuiApplication.primaryScreen().geometry().height())
        omniviewer.setWindowFlags(QtCore.Qt.WindowType.FramelessWindowHint);    
        omniviewer.setAttribute(QtCore.Qt.WidgetAttribute.WA_TranslucentBackground);
        omniviewer.setStyleSheet("")
        
        self.shadow = QGraphicsDropShadowEffect(omniviewer)
        self.shadow.setBlurRadius(3)
        self.shadow.setXOffset(0)
        self.shadow.setYOffset(3)


        self.frame = QtWidgets.QFrame(omniviewer)
        self.frame.setGeometry(QtCore.QRect(0, 0, QGuiApplication.primaryScreen().geometry().width(), QGuiApplication.primaryScreen().geometry().height()))
        self.frame.setStyleSheet("QFrame{\n"
"    \n"
"    background-color: rgba(0, 0, 0, 200);\n"
"}")
        self.frame.setFrameShape(QtWidgets.QFrame.Shape.StyledPanel)
        self.frame.setFrameShadow(QtWidgets.QFrame.Shadow.Raised)
        self.frame.setObjectName("frame")


        #basewidth = 1000
        im = Image.open("ye.jpg").convert("RGB")
        #wpercent = (basewidth/float(im.size[0]))
        #hsize = int((float(im.size[1])*float(wpercent)))
        #im = im.resize((basewidth,hsize), Image.ANTIALIAS)
        qim = im
        data = im.tobytes("raw","RGB")
        qim = QtGui.QImage(data, im.size[0], im.size[1], QtGui.QImage.Format.Format_RGB888)

        self.image = QtWidgets.QLabel(self.frame)
        self.image.setText("")
        self.image.setMouseTracking(True)
        scalefactor = 0
        pix = QtGui.QPixmap.fromImage(qim).scaled(QGuiApplication.primaryScreen().geometry().width() - scalefactor, QGuiApplication.primaryScreen().geometry().height(),Qt.AspectRatioMode.KeepAspectRatio, Qt.TransformationMode.SmoothTransformation)
        self.image.setPixmap(pix)
        self.image.setGeometry(QtCore.QRect(0, 0, pix.width(), pix.height()))
        fg = self.image.frameGeometry()
        cp = QGuiApplication.primaryScreen().geometry().center()
        fg.moveCenter(cp)
        self.image.move(fg.topLeft())
        self.image.setObjectName("image")
        self.close = QtWidgets.QPushButton(omniviewer)
        self.close.setGeometry(QtCore.QRect(int((QGuiApplication.primaryScreen().geometry().width() / 2) - 20), 40, 45, 45))
        self.clshadow = QGraphicsDropShadowEffect(omniviewer)
        self.clshadow.setBlurRadius(3)
        self.clshadow.setXOffset(0)
        self.clshadow.setYOffset(3)
        self.close.setGraphicsEffect(self.clshadow)
        self.close.clicked.connect(self.exit)
        self.close.setStyleSheet("border-radius:22; background-color:white;box-shadow: 0px 5px 5px black;\n"
"font: 75 8pt \"Microsoft YaHei UI\";")
        self.close.setObjectName("close")
        self.name = QtWidgets.QLabel(omniviewer)
        self.name.setGeometry(QtCore.QRect(0, QGuiApplication.primaryScreen().geometry().height() - 208, QGuiApplication.primaryScreen().geometry().width() , 220))
        font = QtGui.QFont()
        font.setFamily("Montserrat SemiBold")
        font.setBold(True)
        font.setWeight(75)
        self.name.setFont(font)
        self.name.setStyleSheet("QLabel{\n"
"    background-color:transparent;\n"
"    color: rgb(255, 255, 255);\n"
"}")
        self.name.setScaledContents(False)
        self.name.setAlignment(QtCore.Qt.AlignmentFlag.AlignCenter)
        self.nshadow = QGraphicsDropShadowEffect(omniviewer)
        self.nshadow.setBlurRadius(3)
        self.nshadow.setXOffset(0)
        self.nshadow.setYOffset(3)
        self.name.setGraphicsEffect(self.nshadow)
        self.name.setObjectName("name")
        
        self.control_box = QtWidgets.QFrame(omniviewer)
        self.control_box.setGeometry(QtCore.QRect(0 , QGuiApplication.primaryScreen().geometry().height() - 70, QGuiApplication.primaryScreen().geometry().width() , 50))
        self.control_box.setStyleSheet("background-color: transparent;")
        self.control_box.setObjectName("control_box")
        
        self.brightness_icn = QtWidgets.QLabel(self.control_box)
        self.brightness_icn.setStyleSheet("border-image:url(resources/brightness.png);\n"
"border-radius:20;\n"
"background-color: transparent;")
        self.brightness_icn.setText("")
        self.brightness_icn.setGeometry(QtCore.QRect(int((self.control_box.width() - 555) / 2) ,17, 14, 14))
        self.brightness_icn.setObjectName("brightness_icn")
        self.zoom_icn = QtWidgets.QLabel(self.control_box)
        self.zoom_icn.setGeometry(QtCore.QRect(int((self.control_box.width() + 530) / 2) ,18, 12, 12))
        self.zoom_icn.setStyleSheet("border-image:url(resources/zoom.png);\n"
"border-radius:20;\n"
"background-color:transparent\n"
"")
        self.zoom_icn.setText("")
        self.zoom_icn.setObjectName("zoom_icn")
        
        self.omni = QtWidgets.QPushButton(self.control_box)
        self.omni.setGeometry(QtCore.QRect(int((self.control_box.width() - 45) / 2), 2, 45, 45))
        self.omni.setStyleSheet("background-color:white;border-radius:21")
        self.omni.setText("")
        self.omni.clicked.connect(self.exit)
        self.omni.setIcon(QIcon('resources/Omni.png'))
        self.omni.setObjectName("omni")
        self.backward = QtWidgets.QPushButton(self.control_box)
        self.backward.setGeometry(QtCore.QRect(int((self.control_box.width() - 160) / 2), 9, 30, 30))
        self.backward.setStyleSheet("border-radius:15; background-color:white;")
        self.bashadow = QGraphicsDropShadowEffect(omniviewer)
        self.bashadow.setBlurRadius(3)
        self.bashadow.setXOffset(0)
        self.bashadow.setYOffset(3)
        self.backward.setGraphicsEffect(self.bashadow)
        self.backward.setObjectName("backward")
        self.forward = QtWidgets.QPushButton(self.control_box)
        self.forward.setGeometry(QtCore.QRect(int((self.control_box.width() + 100) / 2), 9, 30, 30))
        self.forward.setStyleSheet("border-radius:15; background-color:white;")
        self.fshadow = QGraphicsDropShadowEffect(omniviewer)
        self.fshadow.setBlurRadius(3)
        self.fshadow.setXOffset(0)
        self.fshadow.setYOffset(3)
        self.forward.setGraphicsEffect(self.fshadow)
        self.forward.setObjectName("forward")
        self.brightness = QtWidgets.QSlider(self.control_box)
        self.brightness.setGeometry(QtCore.QRect(int((self.control_box.width() - 500) / 2 ),13, 131, 21))
        self.brightness.setWhatsThis("")
        self.brightness.setStyleSheet("background-color: transparent;")
        self.brightness.setMinimum(50)
        self.brightness.setValue(100)
        self.brightness.setMaximum(200)
        self.brightness.valueChanged.connect(self.brightness_slider)
        self.brightness.setOrientation(QtCore.Qt.Orientation.Horizontal)
        self.brightness.setInvertedAppearance(True)
        self.bshadow = QGraphicsDropShadowEffect(omniviewer)
        self.bshadow.setBlurRadius(3)
        self.bshadow.setXOffset(0)
        self.bshadow.setYOffset(3)
        self.brightness.setGraphicsEffect(self.bshadow)
        self.brightness.setInvertedControls(False)
        self.brightness.setObjectName("brightness")
        self.zoom = QtWidgets.QSlider(self.control_box)
        self.zoom.setGeometry(QtCore.QRect(int((self.control_box.width() + 240) / 2) ,13, 131, 21))
        self.zoom.setWhatsThis("")
        self.zoom.setStyleSheet("background-color: transparent;")
        self.zoom.setMinimum(-500)
        self.zoom.setValue(0)
        self.zoom.setMaximum(500)
        self.zoom.valueChanged.connect(self.zoom_slider)
        self.zoom.setOrientation(QtCore.Qt.Orientation.Horizontal)
        self.zshadow = QGraphicsDropShadowEffect(omniviewer)
        self.zshadow.setBlurRadius(3)
        self.zshadow.setXOffset(0)
        self.zshadow.setYOffset(3)
        self.zoom.setGraphicsEffect(self.zshadow)
        self.zoom.setObjectName("zoom")
        self.info = QtWidgets.QPushButton(omniviewer)
        self.info.setGeometry(QtCore.QRect(30, 70, 21, 21))
        self.info.setStyleSheet("border-image:url(resources/brightness.png);\n"
"border-radius:20;\n"
"background-color: transparent;")
        self.ishadow = QGraphicsDropShadowEffect(omniviewer)
        self.ishadow.setBlurRadius(3)
        self.ishadow.setXOffset(0)
        self.ishadow.setYOffset(3)
        self.info.setGraphicsEffect(self.ishadow)
        self.info.setObjectName("info")
        self.wallpaper = QtWidgets.QPushButton(omniviewer)
        self.wallpaper.setGeometry(30 , 110, 21, 21)
        self.wallpaper.setStyleSheet("border-image:url(resources/brightness.png);\n"
"border-radius:20;\n"
"background-color: transparent;")
        self.wshadow = QGraphicsDropShadowEffect(omniviewer)
        self.wshadow.setBlurRadius(3)
        self.wshadow.setXOffset(0)
        self.wshadow.setYOffset(3)
        self.wallpaper.setGraphicsEffect(self.wshadow)
        self.wallpaper.setObjectName("wallpaper")
        self.convert = QtWidgets.QPushButton(omniviewer)
        self.convert.setGeometry(QtCore.QRect(30,30, 21, 21))
        self.convert.setStyleSheet("border-image:url(resources/brightness.png);\n"
"border-radius:20;\n"
"background-color: transparent;")
        self.cshadow = QGraphicsDropShadowEffect(omniviewer)
        self.cshadow.setBlurRadius(3)
        self.cshadow.setXOffset(0)
        self.cshadow.setYOffset(3)
        self.convert.setGraphicsEffect(self.cshadow)
        self.convert.setObjectName("convert")
        self.hover_show = QtWidgets.QFrame(omniviewer)
        self.hover_show.setGeometry(QtCore.QRect(0, -20, QGuiApplication.primaryScreen().geometry().width(), 21))
        self.hover_show.setStyleSheet("background-color:transparent")
        self.hover_show.setFrameShape(QtWidgets.QFrame.Shape.StyledPanel)
        self.hover_show.setFrameShadow(QtWidgets.QFrame.Shadow.Raised)
        self.hover_show.setObjectName("hover_show")
        self.frame.raise_()
        self.image.raise_()
        self.wallpaper.raise_()
        
        self.close.raise_()
        self.name.raise_()
        self.zoom_icn.raise_()
        self.brightness_icn.raise_()
        self.info.raise_()
        self.convert.raise_()
        self.hover_show.raise_()
        self.control_box.raise_()
        self.brightness.raise_()
        self.zoom.raise_()
        

        self.retranslateUi(omniviewer)
        QtCore.QMetaObject.connectSlotsByName(omniviewer)

    def retranslateUi(self, omniviewer):
        _translate = QtCore.QCoreApplication.translate
        omniviewer.setWindowTitle(_translate("omniviewer", "omniviewer"))
        self.close.setText(_translate("omniviewer", "X"))
        self.name.setText(_translate("omniviewer", "Name"))
        self.omni.setShortcut(_translate("omniviewer", "Space"))
        self.backward.setText(_translate("omniviewer", "<"))
        self.backward.setShortcut(_translate("omniviewer", "Left"))
        self.forward.setText(_translate("omniviewer", ">"))
        self.forward.setShortcut(_translate("omniviewer", "Right"))
        self.info.setText(_translate("omniviewer", "!"))
        self.info.setShortcut(_translate("omniviewer", "Left"))
        self.wallpaper.setText(_translate("omniviewer", "!"))
        self.wallpaper.setShortcut(_translate("omniviewer", "Left"))
        self.convert.setText(_translate("omniviewer", "!"))
        self.convert.setShortcut(_translate("omniviewer", "Left"))


if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    omniviewer = QtWidgets.QWidget()
    ui = Ui_omniviewer()
    ui.setupUi(omniviewer)
    omniviewer.show()
    sys.exit(app.exec())
